services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    env_file: .docker.env
    environment:
      POSTGRES_USER: vounica
      POSTGRES_PASSWORD: vounicapass
      POSTGRES_DB: vounica
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vounica"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vounica-net

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    env_file: .docker.env
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vounica-net

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    env_file: .docker.env
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_ALLOW_RECOVERY_MODE=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/readiness"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vounica-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .docker.env
    depends_on:
      - postgres
      - redis
      - qdrant
    ports:
      - "8000:8000"
    networks:
      - vounica-net
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  vounica-net:
    driver: bridge